program
	/* Arranjos com varias dimensoes: */
	
	type matriz = (1:20, 0:30, 10:50, 2:10) integer;
		integer: i, j;
		matriz:m, m, z;
	
	/* Arranjos como vallor, referencia, e valor resultado */

	integer procedure doit(value matriz: m, reference matriz: n, value result matriz: z);
		integer : i;
		integer : j;
	begin
		m(7, 3, 15, 5) := i; /* arranjo como 1-value*/
		if i < j then
			i := j;
			i := 0
		else
			j := i;
			j :=0
		endif;
	
		while true do	/* loop com constante booleana*/
			i := i - 1;
			i := j / i;
			j := n(3, 5, 8);
			i := doit(n, m, z)	/*chamada recursiva */
		endwhile

		return i+1
	end;
	
	begin
		repeat /* expressao complexa envolvendo arranjos: */
		i := i + 2 - j / i ** 2 + 5 - m(2, 3, 4) + n(3, 4, 5) **-m(10, 29, 7);
		j := i ** -(1/2) 
	until i = 0;
